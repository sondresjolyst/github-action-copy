name: list-test
on:
  # push:
  pull_request:
jobs:
  list-files:
    name: list-files
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.list }}
    env:
      path: terraform/clusters/dev
    steps:
      - uses: actions/checkout@v3
      - id: set-matrix
        # run: echo "list=test" >> $GITHUB_OUTPUT
        run: echo "list=$(ls ${{ env.path }} | jq -R -s -c 'split("\n")[:-1]')" >> $GITHUB_OUTPUT
      # - run: echo "list=$(ls | jq -R -s -c 'split("\n")[:-1]')" >> $GITHUB_OUTPUT
      # - name: set-matrix
      #   uses: actions/checkout@v3
      #   run: echo "{matrix}={$(ls ${{ env.path }} | jq -R -s -c 'split("\n")[:-1]')}" >> $GITHUB_OUTPUT

      # - name: test
      #   uses: actions/checkout@v3
      #   run: echo {{ steps.set-matrix.outputs.matrix }}
  foo:
    needs: list-files
    name: list-output
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - id: set-matrix
        run: echo "files ${{ needs.list-files.outputs.matrix }}"
  # check:
  #   needs: list-files
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       filename: ${{ fromJson(needs.list-files.outputs.matrix) }}
  #   steps:
  #     - uses: actions/checkout@v3
  #     - run: echo "{test}={${{ matrix.filename }}} >> $GITHUB_OUTPUT"
  terraform:
    needs: list-files
    name: Terraform
    uses: ./.github/workflows/terraformtest.yml
    strategy:
      matrix:
        filename: ${{ fromJson(needs.list-files.outputs.matrix) }}
    with:
      cluster_name: ${{ matrix.list }}
      branch: master
      environment: operations
      radix_environment: dev
      terraform_version: ~1.3.0
      working_directory: terraform/clusters/dev/${{ inputs.destination }}
      filenames: ${{ matrix.list }}
    secrets:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
